services:
    gateway:
        build: ./gateway
        ports:
            - "3000:3000"
        depends_on:
            - auth
            - user
            - post
            - comment
            - feed
            - like
            - notification
            - search
            - bookmark
            - moderation
            - analytics
            - pgadmin
        env_file:
            - ./gateway/.env
        command: ["npm", "start"]
        networks:
            - auth-network
            - user-network

    auth:
        build: ./services/auth
        ports:
            - "3001:3001"
        env_file:
            - ./services/auth/.env
        command: ["npm", "start"]
        networks:
            - auth-network
        depends_on:
            auth-postgres:
                condition: service_healthy
            auth-redis:
                condition: service_healthy
            rabbitmq:
                condition: service_started
            session-redis:
                condition: service_healthy
        environment:
            RABBITMQ_URL: amqp://rabbitmq:5672

    user:
        build: ./services/user
        ports:
            - "3002:3002"
        env_file:
            - ./services/user/.env
        command: ["npm", "start"]
        networks:
            - user-network
        depends_on:
            user-postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_started
            session-redis:
                condition: service_healthy
        environment:
            RABBITMQ_URL: amqp://rabbitmq:5672

    post:
        build: ./services/post
        ports:
            - "3003:3003"
        env_file:
            - ./services/post/.env
        command: ["npm", "start"]

    comment:
        build: ./services/comment
        ports:
            - "3004:3004"
        env_file:
            - ./services/comment/.env
        command: ["npm", "start"]

    feed:
        build: ./services/feed
        ports:
            - "3005:3005"
        env_file:
            - ./services/feed/.env
        command: ["npm", "start"]

    like:
        build: ./services/like-reaction
        ports:
            - "3006:3006"
        env_file:
            - ./services/like-reaction/.env
        command: ["npm", "start"]

    notification:
        build: ./services/notification
        ports:
            - "3007:3007"
        env_file:
            - ./services/notification/.env
        command: ["npm", "start"]

    search:
        build: ./services/search
        ports:
            - "3008:3008"
        env_file:
            - ./services/search/.env
        command: ["npm", "start"]

    bookmark:
        build: ./services/bookmark
        ports:
            - "3009:3009"
        env_file:
            - ./services/bookmark/.env
        command: ["npm", "start"]

    moderation:
        build: ./services/moderation
        ports:
            - "3010:3010"
        env_file:
            - ./services/moderation/.env
        command: ["npm", "start"]

    analytics:
        build: ./services/analytics
        ports:
            - "3011:3011"
        env_file:
            - ./services/analytics/.env
        command: ["npm", "start"]

    auth-postgres:
        image: postgres
        ports:
            - "5432:5432"
        env_file:
            - ./services/auth/.env
        networks:
            - auth-network
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - auth-db-data:/var/lib/postgresql/data

    user-postgres:
        image: postgres
        ports:
            - "5433:5432"
        env_file:
            - ./services/user/.env
        networks:
            - user-network
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - user-db-data:/var/lib/postgresql/data

    auth-redis:
        image: redis
        restart: always
        ports:
            - "6379:6379"
        command: redis-server
        volumes:
            - auth-redis-data:/data
        networks:
            - auth-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    gateway-redis:
        image: redis
        restart: always
        ports:
            - "6380:6379"
        volumes:
            - gateway-redis-data:/data
        networks:
            - auth-network
            - user-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    session-redis:
        image: redis
        restart: always
        ports:
            - "6381:6379"
        command: redis-server
        volumes:
            - session-redis-data:/data
        networks:
            - auth-network
            - user-network
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 3s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "5050:80"
        depends_on:
            - auth-postgres
            - user-postgres
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        networks:
            - auth-network
            - user-network

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - auth-network
            - user-network

volumes:
    auth-db-data:
        driver: local
    user-db-data:
        driver: local
    auth-redis-data:
        driver: local
    session-redis-data:
        driver: local
    gateway-redis-data:
        driver: local
    pgadmin-data:
        driver: local

networks:
    auth-network:
        driver: bridge
    user-network:
        driver: bridge
